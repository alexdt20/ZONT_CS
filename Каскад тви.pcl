# Параметры регулятора
set REQUEST_TEMP 700   ;# Запрос (70.0°C в десятых градуса)
set MAX_SETPOINT 850   ;# Макс. уставка одного котла (85.0°C)
set HYSTERESIS 20      ;# Зона нечувствительности (±2.0°C)
set STEP 50            ;# Шаг изменения уставки (5.0°C)

# Параметры ТВИ
set TVI_UP 3000        ;# Порог включения доп. котла (300°C*сек)
set TVI_DOWN -1500     ;# Порог отключения котла (-150°C*сек)
set TVI_WEIGHT 0.001   ;# Коэффициент влияния ТВИ

# Защита от частых переключений
set MIN_ON_TIME 300    ;# Минимальное время работы котла (5 мин)
set MIN_OFF_TIME 600   ;# Минимальное время простоя котла (10 мин)

# Инициализация
set active_boilers 1
set tvi_integral 0
set last_boiler_change [clock seconds]
array set boiler_timers {1 0 2 0}

proc control_cascade {} {
    global REQUEST_TEMP MAX_SETPOINT HYSTERESIS STEP
    global TVI_UP TVI_DOWN TVI_WEIGHT
    global MIN_ON_TIME MIN_OFF_TIME
    global active_boilers tvi_integral last_boiler_change boiler_timers
    
    # 1. Получаем текущую температуру
    set current_temp [read_system_temp]
    set error [expr "$REQUEST_TEMP - $current_temp"]
    
    # 2. Обновляем ТВИ (фиксированный интервал 30 сек)
    set tvi_integral [expr "$tvi_integral + $error * 30"]
    
    # 3. Если в зоне гистерезиса - сбрасываем ТВИ
    if { <= [abs $error] $HYSTERESIS } {
        set tvi_integral 0
        return
    }
    
    # 4. Логика изменения уставки
    if { > $error 0 } {
        # Недогрев - увеличиваем уставку
        set new_setpoint [min [expr "[get_boiler_setpoint 1] + $STEP"] $MAX_SETPOINT]
    } else {
        # Перегрев - уменьшаем уставку (но не ниже запроса)
        set new_setpoint [max [expr "[get_boiler_setpoint 1] - $STEP"] $REQUEST_TEMP]
    }
    
    # 5. Применяем новую уставку для всех работающих котлов
    foreach boiler [list_boilers] {
        set_boiler_setpoint $boiler $new_setpoint
    }
    
    # 6. Логика управления каскадом по ТВИ
    set now [clock seconds]
    
    # 6.1. Проверка на включение второго котла
    if { && { == $active_boilers 1 } { >= $tvi_integral $TVI_UP } { >= [expr "$now - $last_boiler_change"] $MIN_OFF_TIME } } {
        start_boiler 2
        set_boiler_setpoint 2 $REQUEST_TEMP
        set active_boilers 2
        set last_boiler_change $now
        set boiler_timers(2) $now
        set tvi_integral 0
    }
    
    # 6.2. Проверка на отключение второго котла
    if { && { == $active_boilers 2 } { <= $tvi_integral $TVI_DOWN } { >= [expr "$now - $boiler_timers(2)"] $MIN_ON_TIME } { >= [expr "$now - $last_boiler_change"] $MIN_ON_TIME } } {
        stop_boiler 2
        set active_boilers 1
        set last_boiler_change $now
        set tvi_integral 0
    }
}

# Запускаем регулятор каждые 30 секунд
after 30000 control_cascade